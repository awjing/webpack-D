{"version":3,"file":"main.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/style.css","webpack:///./src/style1.css"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import './style.css'\n\n// var btn = document.createElement('button')\n// btn.innerHTML = '新增'\n// document.body.appendChild(btn\n\n// btn.onclick = function () {\n//   var div = document.createElement('div')\n//   div.innerHTML = 'item'\n//   document.body.appendChild(div)\n// }\n\n// // css loader底层已经实现HMR，不需要手动实现\n// // 使用vue，vue底层也已经实现HMR\n// // 实现HMR（引入第三方未实现HMR相关的，需要手动实现HMR）\n// if (module.hot) {\n//   module.hot.accept('./number', () => {\n//     document.body.removeChild(document.getElementById('number'))\n//     number()\n//   })\n// }\n\n// import \"@babel/polyfill\";\n// const arr = [\n//   new Promise(() => {}),\n//   new Promise(() => {})\n// ]\n\n// arr.map(item => {\n//   console.log(item)\n// })\n\n\n// Tree Shaking只支持 ES Module模块的引入方式（import）\n// 不支持require（import静态、require动态）\n// import { add } from './math.js'\n\n// add(2, 3)\n\n\n// Code Splitting \n// 代码分割，和webpack无关\n// webpack中实现代码分割，两种方式\n// 1、同步代码：只需要在webpack.common.js做optimization的配置即可\n// 2、异步代码（import）: 异步代码，无需做任何配置，会自动进行代码分割\n\n//同步方式\n// import _ from 'lodash'\n// var element = document.createElement('div')\n// element.innerHTML = _.join(['wang', 'jing'], '-')\n// document.body.appendChild(element)\n\n\n// 异步方式\n// async function getComponent () {\n//   const {default: _ } = await import(/* webpackChunkName: \"lodash\" */ 'lodash')\n//   const element = document.createElement('div')\n//   element.innerHTML = _.join(['wang', 'jing'], '-')\n//   return element\n// }\n\n// document.addEventListener('click', () => {\n//   getComponent().then(element => {\n//     document.body.appendChild(element)\n//   })\n// })\n\n// import test from './test.js'\n// console.log(test.name)\n\nimport './style.css'\nimport './style1.css'\nconsole.log('fgh')\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;ACxEA;;;;;;ACAA;;;A","sourceRoot":""}